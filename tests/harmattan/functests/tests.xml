<?xml version="1.0" encoding="ISO-8859-1"?>
<testdefinition version="0.1">

<!-- Test suite, name mandatory - the same as test package name -->
  <!-- Schema: https://projects.maemo.org/docs/testing/xml-definition.html -->
  <suite name="applauncherd-functional-tests" domain="Application framework"> 


    <set name="TC_Daemon" description="Launcher functional tests" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_launcher_exist" type="Functional" description="To test if the launcher exists and is executable or not" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_launcher_exist</step>
      </case>

      <case name="applauncherd__test_daemon_list" type="Functional" description="To list the running daemons using invoker after boot" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_daemon_list</step>
      </case>

      <case name="applauncherd__test_daemon_second_instance" type="Functional" description="Test that 2nd instance of daemon cannot be started" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_daemon_second_instance </step>
      </case>

      <case name="applauncherd__test_writable_executable_mem" type="Functional" description="Test that applauncherd does not have the writable and executable memory" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_writable_executable_mem</step>
      </case>

      <case name="applauncherd__test_applauncherd_fd_close" type="Functional" description="Test that applauncherd file descriptor does not change after closing aapp " timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_applauncherd_fd_close</step>
      </case>

      <case name="applauncherd__test_applauncherd_fd_kill" type="Functional" description="Test that applauncherd file descriptor does not change after killing app" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_applauncherd_fd_kill</step>
      </case>

      <case name="applauncherd__test_nonlaunchable_apps" type="Functional" description="Test for booster warning while invoking non launchable apps" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_nonlaunchable_apps</step>
      </case>

      <case name="applauncherd__test_daemon" type="Functional" description="Test that the applauncherd can be started daemonized" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-daemons.py test_daemon</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>
    

    <set name="TC_Invoker" description="Tests for invoker" feature="AF Basic Launcher daemon support" requirement="300168">
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_oom_adj_minus_two" type="Functional" description="Test that oom.adj is -1 for launched application process when using invokers -o parameter" timeout="360" level="System" insignificant="false">
        <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_oom_adj_minus_two</step>
      </case>

      <case name="applauncherd__test_signal_forwarding" type="Functional" description="To Test that invoker is killed by the same signal as the application" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_signal_forwarding</step>
      </case>

      <case name="applauncherd__test_invoker_delay" type="Functional" description="Test that invokers --delay parameter works" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_delay</step>
      </case>

      <case name="applauncherd__test_invoker_usage_printing" type="Functional" description="Test that applauncherd invoker --help usage printing ok" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_usage_printing</step>
      </case>

      <case name="applauncherd__test_invoker_search_prog" type="Functional" description="Test that invoker finds binaries from PATH" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_search_prog</step>
      </case>


      <case name="applauncherd__test_invoker_exit_status" type="Functional" description="To test that invoker returns the same exit status as the application" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_exit_status</step>
      </case>

      <case name="applauncherd__test_invoker_gid_uid" type="Functional" description="To Test that the set gid and uid is passed from invoker process to launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_gid_uid</step>
      </case>

      <case name="applauncherd__test_launch_wo_applauncherd" type="Functional" description="Test invoker cannot launch applications when applauncherd is not running" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_launch_wo_applauncherd</step>
      </case>
      <case name="applauncherd__test_invoker_signal_forward" type="Functional" description="Test that UNIX signals are forwarded from invoker to the invoked process" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_signal_forward</step>
      </case>
      <case name="applauncherd__test_wrong_type" type="Functional" description="Test that invoker help is printed if application is invoked using a wrong type" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_wrong_type</step>
      </case>
      <case name="applauncherd__test_unknown_parameter" type="Functional" description="Test that help is printed if unknown parameter is passed to invoker" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_unknown_parameter</step>
      </case>
      <case name="applauncherd__test_non_existing_binary_launch" type="Functional" description="Test that invoker gives error when it tries to launch a binary that does not exist" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_non_existing_binary_launch</step>
      </case>
      <case name="applauncherd__test_invoker_symlink" type="Functional" description="Test that the symlink of invoker is unable to launch applications" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_symlink</step>
      </case>
      <case name="applauncherd__test_app_link" type="Functional" description="Test that symlink of an application can be launched." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_app_link</step>
      </case>
      <case name="applauncherd__test_D_and_G_option" type="Functional" description="Test that -D and -G options work and applications are launcherd" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_D_and_G_option</step>
      </case>
      <case name="applauncherd__test_app_directory" type="Functional" description="Test that invoker is unable to launch an application which is a directory" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_app_directory</step>
      </case>
      <case name="applauncherd__test_unsetPATH_launch" type="Functional" description="Test that invoker is unable to launch an application when PATH env is unset" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_unsetPATH_launch</step>
      </case>
      <case name="applauncherd__test_invoker_wait_term" type="Functional" description="Test that invoker waits for the application to exit" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_wait_term</step>
      </case>
      <case name="applauncherd__test_relative_path_search" type="Functional" description="Test that invoker searches the application through relative path" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_relative_path_search</step>
      </case>
      <case name="applauncherd__test_invoker_param_creds" type="Functional" description="test invoker --creds" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_param_creds</step>
      </case>

      <case name="applauncherd__test_invoker_param_respawn_delay" type="Functional" description="test invoker --respawn" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_param_respawn_delay</step>
      </case>

      <case name="applauncherd__test_invoker_bogus_apptype" type="Functional" description="test giving bogus apptype to invoker" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_bogus_apptype</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>

    </set>


    <set name="TC_CommonBooster" description="Functional tests for applauncherd boosters" feature="AF Basic Launcher daemon support" requirement="300168">
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_unix_signal_handlers" type="Functional" description="Test unixSignalHAndlers by killing booster-m and booster-d, singnal hup" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_unix_signal_handlers</step>
      </case>

      <case name="applauncherd__test_applications_exist" type="Functional" description="test_launchable_application_exists " timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_applications_exist</step>
      </case>


      <case name="applauncherd__test_restart_booster" type="Functional" description="Test that booster is restarted if it is killed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_restart_booster</step>
      </case>

      <case name="applauncherd__test_booster_pid_change" type="Functional" description="Test that application pid changes to the booster 'x' when application is launched using booster 'x' " timeout="360" level="System" insignificant="false">
        <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_booster_pid_change</step>
      </case>

      <case name="applauncherd__test_booster_killed_or_restarted" type="Functional" description="Test that booster is restarted if applauncherd is killed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_booster_killed_or_restarted</step>
      </case>

      <case name="applauncherd__test_launched_app_name" type="Functional" description="Test that launched application name  have .launch at the end" timeout="460" level="System" insignificant="false">
        <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launched_app_name</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>


    <set name="TC_MBooster" description="Launcher functional tests" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_wait_term_m" type="Functional" description="Test that the launched application is killed when killing invoker that is waiting for app to terminate" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_wait_term_m</step>
      </case>

      <case name="applauncherd__test_zombie_state_m" type="Functional" description="To test that no Zombie process exist after the application is killed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_zombie_state_m</step>
      </case>

      <case name="applauncherd__test_launch_multiple_apps_m" type="Functional" description="To test that more than one applications are launched by the launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user;  DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launch_multiple_apps_m</step>
      </case>

      <case name="applauncherd__test_one_instance_m" type="Functional" description="To test that only one instance of a application exist" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_one_instance_m</step>
      </case>

      <case name="applauncherd__test_fd_booster_m" type="Functional" description="File descriptor test for booster-m" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_fd_booster_m</step>
      </case>
      <case name="applauncherd__test_qttas_load_booster_m" type="Functional" description="To test invoker that qttestability plugin is loaded with -testability argument for booster-m" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_qttas_load_booster_m</step>
      </case>
      <case name="applauncherd__test_qttas_load_env_booster_m" type="Functional" description="To test invoker that qttestability plugin is loaded with QT_LOAD_TESTABILITY env variable for booster-m" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_qttas_load_env_booster_m</step>
      </case>
      <case name="applauncherd__test_signal_status_m" type="Functional" description="Test that SigBlk, SigIgn and SigCgt is same for launched and non launched applications" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_signal_status_m</step>
      </case>
      <case name="applauncherd__test_argv_mbooster_limit" type="Functional" description="Test that ARGV_LIMIT (32) arguments are successfully passed to cached [QM]Application." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_argv_mbooster_limit</step>
      </case>
      <case name="applauncherd__test_argv_mbooster_over_limit" type="Functional" description="Test that extra arguments than ARGV_LIMIT are ignored" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_argv_mbooster_over_limit</step>
      </case>

      <case name="applauncherd__test_launch_multiple_apps_cont_m" type="Functional" description="Test that launcher can launch multiple applications continously" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launch_multiple_apps_cont_m</step>
      </case>

      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>


    <set name="TC_QtBooster" description="Functional tests for applauncherd boosters" feature="AF Basic Launcher daemon support" requirement="300168">
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_fd_booster_q" type="Functional" description="File descriptor test for booster-q" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_fd_booster_q</step>
      </case>

      <case name="applauncherd__test_dirPath_filePath_q" type="Functional" description="Test that correct file path and dir path is passed by booster q" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_dirPath_filePath_q</step>
      </case>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>


    <set name="TC_DBooster" description="functional tests for qml boosters" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_zombie_state_qml" type="Functional" description="To test that no Zombie process exist after the application is killed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_zombie_state_qml</step>
      </case>

      <case name="applauncherd__test_launch_multiple_apps_qml" type="Functional" description="To test that more than one applications are launched by the launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launch_multiple_apps_qml</step>
      </case>

      <case name="applauncherd__test_one_instance_qml" type="Functional" description="To test that only one instance of a application exist" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_one_instance_qml</step>
      </case>

      <case name="applauncherd__test_launch_multiple_apps_cont_qml" type="Functional" description="To test that more than one applications are launched by the launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launch_multiple_apps_cont_qml</step>
      </case>

      <case name="applauncherd__test_wait_term_qml" type="Functional" description="When calling invoker with --wait-term and killing invoker,the launched application should die too." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_wait_term_qml</step>
      </case>

      <case name="applauncherd__test_fd_booster_d" type="Functional" description="File descriptor test for booster-d" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_fd_booster_d</step>
      </case>
      <case name="applauncherd__test_qttas_load_booster_d" type="Functional" description="To test invoker that qttestability plugin is loaded with -testability argument for booster-d" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_qttas_load_booster_d</step>
      </case>

      <case name="applauncherd__test_qttas_load_env_booster_d" type="Functional" description="To test invoker that qttestability plugin is loaded with QT_LOAD_TESTABILITY env variable for booster-d" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_qttas_load_env_booster_d</step>
      </case>
      <case name="applauncherd__test_signal_status_qml" type="Functional" description="Test that SigBlk, SigIgn and SigCgt is same for launched and non launched applications" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_signal_status_qml</step>
      </case>
      <case name="applauncherd__test_argv_dbooster_limit" type="Functional" description="Test that ARGV_LIMIT (32) arguments are successfully passed to cached [QM]Application." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_argv_dbooster_limit</step>
      </case>
      <case name="applauncherd__test_argv_dbooster_over_limit" type="Functional" description="Test that extra arguments than ARGV_LIMIT are ignored " timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_argv_mbooster_over_limit </step>
      </case>
      <case name="applauncherd__test_dirPath_filePath_d" type="Functional" description="Test that correct file path and dir path is passed by booster d" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_dirPath_filePath_d</step>
      </case>

      <post_steps>
	<step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>


      <!-- Test for e booster -->
    <set name="TC_EBooster" description="functional tests for qml boosters" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_wait_term_e" type="Functional" description="When calling invoker with --wait-term and killing invoker,the launched application should die too." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_wait_term_e</step>
      </case>

      <case name="applauncherd__test_zombie_state_e" type="Functional" description="To test that no Zombie process exist after the application is killed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_zombie_state_e</step>
      </case>

      <case name="applauncherd__test_launch_multiple_apps_e" type="Functional" description="To test that more than one applications are launched by the launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launch_multiple_apps_e</step>
      </case>

      <case name="applauncherd__test_one_instance_e" type="Functional" description="To test that only one instance of a application exist" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_one_instance_e</step>
      </case>

      <case name="applauncherd__test_fd_booster_e" type="Functional" description="File descriptor test for booster-d" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_fd_booster_e</step>
      </case>
      <case name="applauncherd__test_dirPath_filePath_e" type="Functional" description="Test that correct file path and dir path is passed by booster e" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_dirPath_filePath_e</step>
      </case>

      <case name="applauncherd__test_launch_multiple_apps_cont_e" type="Functional" description="To test that more than one applications are launched by the launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py test_launch_multiple_apps_cont_e</step>
      </case>

      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>


    <set name="TC_Security" description="Tests that have something to do with the security platform" feature="AF Basic Launcher daemon support" requirement="300168">
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_no_aegis" type="Functional" description="Check that an application that doesn't have aegis file doesn't get any funny credentials." timeout="360" level="System" insignificant="false" >
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-security.py test_no_aegis</step>
      </case>

      <case name="applauncherd__test_invoker_creds" type="Functional" description="Test that launcher and invoker have correct credentials" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-security.py test_invoker_creds</step>
      </case>

      <case name="applauncherd__test_correct_creds" type="Functional" description="Test that launched applications get correct credentials when they provide Aegis files" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-security.py test_correct_creds</step>
      </case>

      <case name="applauncherd__test_dont_pass_invoker_creds" type="Functional" description="Test that invoker specific creds are not passed on to launched application" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-security.py test_dont_pass_invoker_creds</step>
      </case>

      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>
     
      <environments>
        <scratchbox>false</scratchbox>
        <hardware>true</hardware>    
      </environments>
    </set>
    

      <!-- Single Instance Tests (without invoker) -->
    <set name="TC_SingleInstance_No_Invoker" description="functional tests for single instance without invoker" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_single_instance_window_raise_wo_invoker" type="Functional" description="Test basic single instance functionality and window raising" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_window_raise_without_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_and_non_single_instance_wo_invoker" type="Functional" description="Test that there's multiple instances when starting app w/o single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_and_non_single_instance_without_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_stress_test_wo_invoker" type="Functional" description="Try starting apps fast with single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_stress_test_without_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_abnormal_lock_release_wo_invoker" type="Functional" description="Try starting an app, killing it and starting it again checking that the pid has changed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_abnormal_lock_release_without_invoker</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>


      <!-- Single Instance Tests (with invoker) -->
    <set name="TC_SingleInstance_Invoker" description="functional tests for single instance with invoker" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_single_instance_window_raise_w_invoker" type="Functional" description="Test basic single instance functionality and window raising" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_window_raise_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_and_non_single_instance_w_invoker" type="Functional" description="Test that there's multiple instances when starting app w/o single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_and_non_single_instance_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_stress_test_w_invoker" type="Functional" description="Try starting apps fast with single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_stress_test_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_abnormal_lock_release_w_invoker" type="Functional" description="Try starting an app, killing it and starting it again checking that the pid has changed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_abnormal_lock_release_with_invoker</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
      </post_steps>
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>
    <set name="TC_Splash" description="functional tests for splash" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_splash" type="Functional" description="To test --splash functionality" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  /usr/share/applauncherd-testscripts/tc_splash.rb --name test_splash</step>
      </case>

      <case name="applauncherd__test_splash_landscape" type="Functional" description="To test --splash-landscape functionality" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  /usr/share/applauncherd-testscripts/tc_splash.rb --name test_splash_landscape</step>
      </case>

      <case name="applauncherd__test_no_splash" type="Functional" description="To test splash parameters is not reset " timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  /usr/share/applauncherd-testscripts/tc_splash.rb --name test_no_splash</step>
      </case>

      <environments>
          <scratchbox>true</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>
    <set name="TC_Bootmode" description="functional tests for boot mode" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
      </pre_steps>

      <case name="applauncherd__test_change_to_normal_mode" type="Functional" description="To test change from boot mode to normal mode" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-boot-mode.py test_change_to_normal_mode</step>
      </case>

      <case name="applauncherd__test_boot_mode_and_normal_mode" type="Functional" description="To test boot mode and normal mode" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-boot-mode.py test_boot_mode_and_normal_mode</step>
      </case>
      <case name="applauncherd__test_single_instance_window_raise_with_script" type="Functional" description="Test basic single instance functionality and window raising using script" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_window_raise_with_script</step>
      </case>
      <case name="applauncherd__test_SIGUSR2" type="Functional" description="Test for SIGUSR2" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-boot-mode.py test_SIGUSR2</step>
      </case>
      <case name="applauncherd__test_SIGUSR1" type="Functional" description="Test for SIGUSR1" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-boot-mode.py test_SIGUSR1 </step>
      </case>
      <environments>
          <scratchbox>true</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>

  </suite>
</testdefinition>


